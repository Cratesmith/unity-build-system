// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEditor;
using UnityEngine;
using UBS;
using System.IO;


[CustomEditor(typeof(BuildCollection))]
public class UBSAssetInspector : Editor
{

	public override void OnInspectorGUI()
	{
		var data = target as BuildCollection;

		GUILayout.Label("Build Processes", "BoldLabel");

		GUILayout.BeginVertical("HelpBox",GUILayout.MinHeight(40));

		{
			if(data.mProcesses.Count == 0)
				GUILayout.Label("None", UBS.Styles.bigHint);
			bool odd = false;
			foreach(var e in data.mProcesses)
			{
				if(e == null)
					break;
				GUILayout.BeginHorizontal(odd? UBS.Styles.selectableListEntryOdd : UBS.Styles.selectableListEntry);
				{
					GUILayout.Label( e.mName, UBS.Styles.selectableListEntryText );
					GUILayout.FlexibleSpace();
					var sel = GUILayout.Toggle( e.mSelected , "");
					if(sel != e.mSelected)
					{
						e.mSelected = sel;
						EditorUtility.SetDirty(data);
					}
				}
				GUILayout.EndHorizontal();
				odd = !odd;
			}
		}
		GUILayout.EndVertical();

		GUILayout.BeginHorizontal();
		{
			if(GUILayout.Button("Edit"))
			{
				UBSEditorWindow.Init(data);
			}
			GUILayout.Space(5);
			if(GUILayout.Button("Run selected builds"))
			{
				UBSBuildWindow.Init( data );
			}
		}
		GUILayout.EndHorizontal();
	}

	[MenuItem("Assets/Create/UBS Build Collection")]
	public static void CreateBuildCollectionMenuCommand()
	{
		var asset = new BuildCollection();
		asset.hideFlags = HideFlags.None;
		var path = AssetDatabase.GetAssetPath(Selection.activeObject);

		if(String.IsNullOrEmpty( path ))
		{
			path = "Assets";
		}

		var di = new FileInfo( path );
		if((di.Attributes & FileAttributes.Directory) != 0)
			path = path + "/New Build Collection.asset";
		else
			path = path.Substring(0, path.Length - di.Name.Length -1) + "/New Build Collection.asset";

		path = AssetDatabase.GenerateUniqueAssetPath( path );

		AssetDatabase.CreateAsset( asset, path);
		AssetDatabase.SaveAssets();
		Selection.activeObject = asset;
	}
}

